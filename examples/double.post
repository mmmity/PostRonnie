'''
This program gets a string of ones of length N as input, and outputs the string of ones of length 2 * N
'''

? 7 44         # if no input is given, just do nothing

> 8
? 7 10          # moving right while carriage points at '1'

'''
I want program to work like this:

011100000
011011000
010111100
001111110

It creates another string of ones, separated from input by one zero.
Deletes chars from input one by one, adding two chars to second string.
Strings are always separated by exactly one zero
'''

< 24
? 26 41

0 27
> 28
1 30

> 31
? 30 33         # moving right while carriage points at '1'

1 35

< 36
? 36 38         # moving left while carriage points at '1'

0 23            # just want to jump to start of this big loop, we know that now carriage points at zero


> 42            # we appear here when input is cleared, carriage points here: -> 0011...
> 44            # but we want carriage to point at the first one, so we move it right two times

END


'''
Example: (Element right after C is where carriage points to)
0C11000 - at the beginning
011C000 - after lines 5-8
0101C00 - after lines 23-31
0101C10 - after line 33
01C0110 - after line 36
then we jump to line 23 and again:
00111C0 - after lines 23-31
00111C1 - after line 33
0C01111 - we jump to line 23 again
It moves carriage left, sees that there are no more ones left, and then moves it right two times
'''
